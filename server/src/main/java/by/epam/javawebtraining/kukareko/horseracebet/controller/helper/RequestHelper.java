package by.epam.javawebtraining.kukareko.horseracebet.controller.helper;import by.epam.javawebtraining.kukareko.horseracebet.controller.handler.*;import by.epam.javawebtraining.kukareko.horseracebet.controller.handler.HorseCommand;import javax.servlet.http.HttpServletRequest;import java.util.HashMap;import java.util.Map;import java.util.concurrent.locks.ReentrantLock;import java.util.regex.Matcher;import java.util.regex.Pattern;/** * @author Yulya Kukareko * @version 1.0 13 Apr 2019 */public class RequestHelper {    private static RequestHelper instance;    private static final ReentrantLock LOCK = new ReentrantLock();    Map<String, Command> commands = new HashMap<>();    private RequestHelper() {        commands.put("/auth/", new SignInCommand());        commands.put("/signup/", new SignUpCommand());        commands.put("/horses/", new HorseCommand());        commands.put("/races/", new RaceCommand());        commands.put("/sphorses/", new HorseStartingPriceCommand());        commands.put("/bets/", new BetCommand());        commands.put("/results/", new ResultCommand());        commands.put("/userbet/", new UserBetCommand());        commands.put("/user/", new UserCommand());    }    public static RequestHelper getInstance() {        if (instance == null) {            LOCK.lock();            if (instance == null) {                instance = new RequestHelper();            }            LOCK.unlock();        }        return instance;    }    public Command getCommand(HttpServletRequest request) {        Pattern pattern = Pattern.compile("(?!/server_war/|/ctrl)(/[\\w]+/)");        Matcher matcher = pattern.matcher(request.getRequestURL());        Command command = null;        if (matcher.find()) {            command = commands.get(matcher.group(0));        }//        if (command == null) {//            command = new NoCommand();//        }        return command;    }}